{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","window","location","href","response","onerror","e","console","log","message","send","ActionBtn","props","tweet","action","didPerformAction","likes","actionDisplay","display","handleActionBackendEvent","type","className","onClick","preventDefault","tweetId","id","tweetAction","ParentTweet","parent","hideActions","Tweet","didRetweet","useState","actionTweet","setActionTweet","handlePerformAction","newActionTweet","path","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","content","Fragment","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","loadTweets","handleDidRetweet","newTweet","updatedTweetsInit","unshift","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","cols","rows","required","TweetsComponents","canTweet","setNewTweets","tempNewTweets","TweetDetailComponent","didLookup","setdidLookup","settweet","handleBackendLookup","res","loadTweetDetail","App","src","logo","alt","Boolean","hostname","appEL","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","MyComponent","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9b7a0704.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const backendLookup = (method, endpoint, callback, data) => {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data);\n  }\n  const xhr = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  xhr.responseType = 'json';\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  if (csrftoken) {\n    xhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhr.setRequestHeader('X-CSRFToken', csrftoken);\n  }\n  xhr.onload = function () {\n    if (xhr.status === 403) {\n      window.location.href = '/login?showLoginRequired=true';\n    }\n    callback(xhr.response, xhr.status);\n  };\n  xhr.onerror = (e) => {\n    console.log(e);\n    callback({ message: 'The request was an error' }, 400);\n  };\n  console.log(jsonData);\n\n  xhr.send(jsonData);\n};\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n","import { backendLookup } from '../lookup';\nexport function loadTweets(username, callback) {\n  let endpoint = '/tweets/';\n  if (username) {\n    endpoint = `/tweets/?username=${username}`;\n  }\n  backendLookup('GET', endpoint, callback);\n}\n\nexport function loadTweetDetail(tweetId, callback) {\n  let endpoint = '/tweets/';\n  if (tweetId) {\n    endpoint = `/tweets/${tweetId}`;\n  }\n  backendLookup('GET', endpoint, callback);\n}\n\nexport const createTweet = (newTweet, callback) => {\n  backendLookup('POST', '/tweets/create', callback, { content: newTweet });\n};\n\nexport const tweetAction = (tweetId, action, callback) => {\n  backendLookup('POST', '/tweets/action', callback, {\n    id: tweetId,\n    action: action,\n  });\n};\n","import React from 'react';\nimport { tweetAction } from './lookup';\n\nexport function ActionBtn(props) {\n  const { tweet, action, didPerformAction } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n\n  const actionDisplay = action.display ? action.display : 'Action';\n  const handleActionBackendEvent = (response, status) => {\n    console.log(status, response);\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n  const handleClick = (e) => {\n    e.preventDefault();\n    tweetAction(tweet.id, action.type, handleActionBackendEvent);\n  };\n  const display =\n    action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return (\n    <button className=\"btn btn-outline-primary btn-sm\" onClick={handleClick}>\n      {display}\n    </button>\n  );\n}\n","import React, { useState } from 'react';\nimport {} from './lookup';\nimport { ActionBtn } from './buttons';\n\nexport function ParentTweet(props) {\n  const { tweet } = props;\n  return tweet.parent ? (\n    <div className=\"row\">\n      <div className=\"col-11 mx-auto p-3 border rounded\">\n        <p className=\"mb-0 text-muted small\">Retweet</p>\n        <Tweet hideActions className={'mx-auto'} tweet={tweet.parent} />\n      </div>\n    </div>\n  ) : null;\n}\nexport const Tweet = (props) => {\n  const { tweet, didRetweet, hideActions } = props;\n  const [actionTweet, setActionTweet] = useState(\n    props.tweet ? props.tweet : null\n  );\n  const className = props.className\n    ? props.className\n    : 'col-10 mx-auto col-md-6';\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      // let the tweet list know\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n  const path = window.location.pathname;\n  const idRegex = /(?<tweetid>\\d+)/;\n  const match = path.match(idRegex);\n  const urlTweetId = match ? match.groups.tweetid : -1;\n  const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n  const handleLink = (e) => {\n    e.preventDefault();\n    window.location.href = `/${tweet.id}`;\n  };\n  return (\n    <div className={className}>\n      <div className=\"\">\n        <p>\n          {tweet.id} - {tweet.content}\n        </p>\n        <ParentTweet tweet={tweet} />\n      </div>\n\n      <div className=\"btn btn-group\">\n        {hideActions !== true && actionTweet && (\n          <React.Fragment>\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: 'like', display: 'Likes' }}\n            />\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: 'unlike', display: 'Unlike' }}\n            />\n            <ActionBtn\n              tweet={actionTweet}\n              didPerformAction={handlePerformAction}\n              action={{ type: 'retweet', display: 'Retweet' }}\n            />\n          </React.Fragment>\n        )}\n        {isDetail === true ? null : (\n          <button className=\"btn btn-primary\" onClick={handleLink}>\n            View\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { loadTweets } from './lookup';\nimport { Tweet } from './detail';\nexport const TweetList = (props) => {\n  const [tweetsInit, setTweetsInit] = useState([]);\n\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n    // console.log('in first use effect');\n\n    return () => {};\n  }, [tweetsInit, props.newTweets, tweets]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsDidSet(true);\n          setTweetsInit(response);\n        }\n      };\n      // console.log('in second use effect');\n\n      loadTweets(props.username, myCallback);\n    }\n  }, [tweetsInit, tweetsDidSet, props.username]);\n  const handleDidRetweet = (newTweet) => {\n    const updatedTweetsInit = [...tweetsInit];\n    updatedTweetsInit.unshift(newTweet);\n    setTweetsInit(updatedTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(newTweet);\n    setTweets(updatedTweetsInit);\n  };\n  return tweets.map((item, index) => {\n    return (\n      <Tweet\n        didRetweet={handleDidRetweet}\n        className=\"my-5 py-5 border bg-white text-dark\"\n        tweet={item}\n        key={index}\n      />\n    );\n  });\n};\n","import React from 'react';\nimport { createTweet } from './lookup';\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef();\n  const { didTweet } = props;\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response);\n    } else {\n      console.log(response);\n      alert('an error occured');\n    }\n  };\n  const handleSubmit = (e) => {\n    // backend api request\n    e.preventDefault();\n    const newVal = textAreaRef.current.value;\n    createTweet(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n  return (\n    <div className={props.className}>\n      <form onSubmit={handleSubmit} name=\"tweet\">\n        <textarea\n          ref={textAreaRef}\n          className=\"form-control\"\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"5\"\n          required\n        ></textarea>\n        <button type=\"submit\" className=\"btn btn-primary my-3\">\n          Tweet\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { TweetList } from './list';\nimport { TweetCreate } from './create';\nimport { loadTweetDetail } from './lookup';\nimport { Tweet } from './detail';\nexport const TweetsComponents = (props) => {\n  console.log(props);\n  const canTweet = props.canTweet === 'false' ? false : true;\n  const [newTweets, setNewTweets] = useState([]);\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.unshift(newTweet);\n    setNewTweets(tempNewTweets);\n  };\n\n  return (\n    <div className={props.className}>\n      {canTweet === true && (\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\n      )}\n      <TweetList newTweets={newTweets} {...props} />\n    </div>\n  );\n};\n\nexport function TweetDetailComponent(props) {\n  const { tweetId } = props;\n  const [didLookup, setdidLookup] = useState(false);\n  const [tweet, settweet] = useState(null);\n  const handleBackendLookup = (res, status) => {\n    if (status === 200) {\n      settweet(res);\n    } else {\n      alert('error finding our tweet');\n    }\n  };\n  useEffect(() => {\n    if (didLookup === false) {\n      loadTweetDetail(tweetId, handleBackendLookup);\n      setdidLookup(true);\n    }\n  }, [didLookup, setdidLookup, tweetId]);\n  return tweet === null ? null : (\n    <Tweet tweet={tweet} className={props.className} />\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { TweetsComponents } from '../src/tweets/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <TweetsComponents />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { TweetsComponents, TweetDetailComponent } from './tweets';\n\nconst appEL = document.getElementById('root');\nif (appEL) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEL\n  );\n}\nconst e = React.createElement;\nconst tweetsEl = document.getElementById('tweetme-2');\nif (tweetsEl) {\n  // console.log(tweetsEl.dataset);\n  const MyComponent = e(TweetsComponents, tweetsEl.dataset);\n  ReactDOM.render(MyComponent, tweetsEl);\n}\nconst tweetDetailElements = document.querySelectorAll('.tweetme-2-detail');\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}